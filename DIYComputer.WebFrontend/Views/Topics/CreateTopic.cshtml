@model DIYComputer.Entity.SysEntity.Topic
@{
    Layout = "_MyUserLayout";

}
<div class="editor-area ">
    <h2>创建文章</h2>
    <form asp-action="CreateTopic" method="post" onsubmit="return getAllHtml()">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label asp-for="TopicClassId" class="control-label"></label>
                    <select asp-for="TopicClassId" class=" form-control chosen-select-no-results ">
                        <option value=""></option>
                    </select>
                    <span asp-validation-for="TopicClassId" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="row">

            <label asp-for="Outline" class="control-label"></label>
            <textarea asp-for="Outline" class=" col-md-5 ">
               
                </textarea>


        </div>
        <div class="row">
            <script asp-for id="editor" type="text/plain" style="height:500px;">
            </script>
            <input type="submit" onclick="return getAllHtml();" value="提交文章" class="btn btn-default" />

            <textarea asp-for="htmlstr" style="display:none"></textarea>
        </div>
    </form>
</div>
<script type="text/javascript">


    //实例化编辑器
    //建议使用工厂方法getEditor创建和引用编辑器实例，如果在某个闭包下引用该编辑器，直接调用UE.getEditor('editor')就能拿到相关的实例
    var ue = UE.getEditor('editor');


    function isFocus(e) {
        alert(UE.getEditor('editor').isFocus());
        UE.dom.domUtils.preventDefault(e)
    }
    function setblur(e) {
        UE.getEditor('editor').blur();
        UE.dom.domUtils.preventDefault(e)
    }
    function insertHtml() {
        var value = prompt('插入html代码', '');
        UE.getEditor('editor').execCommand('insertHtml', value)
    }
    function createEditor() {
        enableBtn();
        UE.getEditor('editor');
    }
    function getAllHtml() {

        if (ue.getContentLength() > 50)
            document.getElementById("htmlstr").innerHTML = UE.getEditor('editor').getAllHtml();


        else {
            alert('内容长度必须超过50个字符');

            return false;
        }
        return true;



    }
    function getContent() {
        var arr = [];
        arr.push("使用editor.getContent()方法可以获得编辑器的内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editor').getContent());
        alert(arr.join("\n"));
    }
    function getPlainTxt() {
        var arr = [];
        arr.push("使用editor.getPlainTxt()方法可以获得编辑器的带格式的纯文本内容");
        arr.push("内容为：");
        arr.push(UE.getEditor('editor').getPlainTxt());
        alert(arr.join('\n'))
    }
    function setContent(isAppendTo) {
        var arr = [];
        arr.push("使用editor.setContent('欢迎使用ueditor')方法可以设置编辑器的内容");
        UE.getEditor('editor').setContent('欢迎使用ueditor', isAppendTo);
        alert(arr.join("\n"));
    }
    function setDisabled() {
        UE.getEditor('editor').setDisabled('fullscreen');
        disableBtn("enable");
    }

    function setEnabled() {
        UE.getEditor('editor').setEnabled();
        enableBtn();
    }

    function getText() {
        //当你点击按钮时编辑区域已经失去了焦点，如果直接用getText将不会得到内容，所以要在选回来，然后取得内容
        var range = UE.getEditor('editor').selection.getRange();
        range.select();
        var txt = UE.getEditor('editor').selection.getText();
        alert(txt)
    }

    function getContentTxt() {
        var arr = [];
        arr.push("使用editor.getContentTxt()方法可以获得编辑器的纯文本内容");
        arr.push("编辑器的纯文本内容为：");
        arr.push(UE.getEditor('editor').getContentTxt());
        alert(arr.join("\n"));
    }
    function hasContent() {
        var arr = [];
        arr.push("使用editor.hasContents()方法判断编辑器里是否有内容");
        arr.push("判断结果为：");
        arr.push(UE.getEditor('editor').hasContents());
        alert(arr.join("\n"));
    }
    function setFocus() {
        UE.getEditor('editor').focus();
    }
    function deleteEditor() {
        disableBtn();
        UE.getEditor('editor').destroy();
    }
    function disableBtn(str) {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            if (btn.id == str) {
                UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
            } else {
                btn.setAttribute("disabled", "true");
            }
        }
    }
    function enableBtn() {
        var div = document.getElementById('btns');
        var btns = UE.dom.domUtils.getElementsByTagName(div, "button");
        for (var i = 0, btn; btn = btns[i++];) {
            UE.dom.domUtils.removeAttributes(btn, ["disabled"]);
        }
    }

    function getLocalData() {
        alert(UE.getEditor('editor').execCommand("getlocaldata"));
    }

    function clearLocalData() {
        UE.getEditor('editor').execCommand("clearlocaldata");
        alert("已清空草稿箱")
    }

    function getAjaxForTC() {
        var hostser = GetConfigForServiceAPI();
        debugger;
        $("#TopicClass").empty();
        $.ajax({

            url: hostser + "/api/TopicsAPI/GetTopicClass", //此次url改为真正需要的url
            type: 'GET', //　<!--type ：请求类型:post/get --> ,
            dataType: 'json', //   <!--dataType:服务器返回的数据类型 text/xml/script/html/json/jsonp -->
            // xhrFields: {
            //     withCredentials: true
            // },
            async: false,
            // crossDomain: true,
            contentType: "application/json",
            success: function (data, status) {

                $.each(data.data, function (index, item) {
                    $("#TopicClassId").append( //此处向select中循环绑定数据
                        "<option value=" + item.id + ">" + item.name + "</option>");
                });
            },
            error: function (data) {
                debugger;
            }
            //success: function success(resulet) {

            //    var sel = document.getElementById("MBAMDChip");
            //    $("#MBAMDChip").empty();
            //    for (var i in resulet) {
            //        sel.option.add = new Option(i, resulet[i]);
            //    }

            //}
        });

    }
    $(document).ready(function () {
        getAjaxForTC();

    });
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
